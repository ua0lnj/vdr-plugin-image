#
# Makefile for Image plugin to VDR
#
# (C) 2004-2008 Andreas Brachold    <anbr at users.berlios.de>
#
# This code is distributed under the terms and conditions of the
# GNU GENERAL PUBLIC LICENSE. See the file COPYING for details.
#
#
# You can change the compile options here or create a Make.config
# in the VDR directory an set them there.
#
# $Id: Makefile 65 2010-10-19 16:55:00Z anbr $
#


### uncomment the following line, if you don't have libexif installed
#WITHOUT_LIBEXIF=1

#FFMDIR = ../../../../ffmpeg


# The official name of this plugin.
# This name will be used in the '-P...' option of VDR to load the plugin.
# By default the main source file also carries this name.
#
PLUGIN = image

### The C++ compiler and options:

CXX      ?= g++
CXXFLAGS ?= -fPIC -O2 -Wall -Woverloaded-virtual
PKG-CONFIG ?= pkg-config

###############################################
###############################################
#
# no user configurable options below this point
#
###############################################
###############################################

### The directory environment:

VDRDIR = ../../..
LIBDIR = ../../lib
TMPDIR = /tmp

### Allow user defined options to overwrite defaults:

-include $(VDRDIR)/Make.config

### The version number of this plugin (taken from the main source file):

VERSION = $(shell grep 'static const char \*VERSION *=' $(PLUGIN).c | awk '{ print $$6 }' | sed -e 's/[";]//g')

### The version number of VDR (taken from VDR's "config.h"):

APIVERSION = $(shell grep 'define APIVERSION ' $(VDRDIR)/config.h | awk '{ print $$3 }' | sed -e 's/"//g')

### The name of the distribution archive:

ARCHIVE = $(PLUGIN)-$(VERSION)
PACKAGE = vdr-$(ARCHIVE)

### The version number of ffmpeg (taken from "libavcodec/avcodec.h" ):

ifdef FFMDIR
LIBAVCODECVERSION = $(shell grep "\#define LIBAVCODEC_VERSION " $(FFMDIR)/libavcodec/avcodec.h | \
                    awk '{ print $$3 }' | cut -d "." -f 1 )
endif

### Includes and Defines (add further entries here):


DEFINES  += -DPLUGIN_NAME_I18N='"$(PLUGIN)"'
DEFINES  += -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS
LIBS += liboutput/liboutput.a libimage/libimage.a

INCLUDES += -I$(VDRDIR)/include -I.

ifdef FFMDIR
DEFINES += -DFFMDIR
LIBS += -L$(FFMDIR)/libavcodec -lavcodec -lz
ifeq ($(LIBAVCODECVERSION),51)
LIBS += -L$(FFMDIR)/libavformat -L$(FFMDIR)/libavutil
LIBS += -lavformat -lavutil
endif
ifndef WITHOUT_SWSCALER
  DEFINES += -DHAVE_SWSCALER
  LIBS += -L$(FFMDIR)/libswscale -lswscale
endif
else
  PKG-LIBS += libavcodec 
  PKG-INCLUDES += libavcodec
ifndef WITHOUT_SWSCALER
  PKG-INCLUDES += libswscale
  PKG-LIBS += libswscale
endif
endif

ifndef WITHOUT_LIBEXIF
  PKG-INCLUDES += libexif
  PKG-LIBS += libexif
  DEFINES += -DHAVE_LIBEXIF
endif


ifdef PKG-INCLUDES
INCLUDES += $(shell $(PKG-CONFIG) --cflags $(PKG-INCLUDES))
endif

ifdef PKG-LIBS
LIBS    += $(shell $(PKG-CONFIG) --libs $(PKG-LIBS))
endif

### The object files (add further files here):

OBJS = ${PLUGIN}.o data.o menu.o data-image.o menu-image.o \
 setup-image.o player-image.o control-image.o commands.o menu-commands.o \
 list.o


ifndef WITHOUT_LIBEXIF
  OBJS    += exif.o
endif

### The subdirectories:

SUBDIRS = liboutput libimage

### Implicit rules:

%.o: %.c
	$(CXX) $(CXXFLAGS) -c $(DEFINES) $(INCLUDES) $<

# Dependencies:

MAKEDEP = $(CXX) -MM -MG
DEPFILE = .dependencies
$(DEPFILE): Makefile
	@$(MAKEDEP) $(DEFINES) $(INCLUDES) $(OBJS:%.o=%.c) > $@

-include $(DEPFILE)

### Internationalization (I18N):

PODIR     = po
LOCALEDIR = $(VDRDIR)/locale
I18Npo    = $(wildcard $(PODIR)/*.po)
I18Nmsgs  = $(addprefix $(LOCALEDIR)/, $(addsuffix /LC_MESSAGES/vdr-$(PLUGIN).mo, $(notdir $(foreach file, $(I18Npo), $(basename $(file))))))
I18Npot   = $(PODIR)/$(PLUGIN).pot

%.mo: %.po
	msgfmt -c -o $@ $<

$(I18Npot): $(wildcard *.c)
	xgettext -C -cTRANSLATORS --no-wrap --no-location -k -ktr -ktrNOOP --msgid-bugs-address='Andreas Brachold <anbr at user.berlios.de>' -o $@ $^

%.po: $(I18Npot)
	msgmerge -U --no-wrap --no-location --backup=none -q $@ $<
	@touch $@

$(I18Nmsgs): $(LOCALEDIR)/%/LC_MESSAGES/vdr-$(PLUGIN).mo: $(PODIR)/%.mo
	@mkdir -p $(dir $@)
	cp $< $@

.PHONY: i18n
i18n: $(I18Nmsgs)

### Targets:

all: subdirs libvdr-$(PLUGIN).so  i18n

libvdr-$(PLUGIN).so: $(OBJS)
	$(CXX) $(CXXFLAGS) -shared -export-dynamic $(OBJS) $(LIBS) -o $@
	@mkdir -p $(LIBDIR)
	@cp $@ $(LIBDIR)/$@.$(APIVERSION)


subdirs:
	@for i in $(SUBDIRS) ;\
	do \
	    ( cd $$i;\
              $(MAKE) all PLUGIN=$(PLUGIN);\
       ) \
	|| exit 1;\
	done

dist: clean
	@-rm -rf $(TMPDIR)/$(ARCHIVE)
	@mkdir $(TMPDIR)/$(ARCHIVE)
	@cp -a * $(TMPDIR)/$(ARCHIVE)
	@chmod 644 -R $(TMPDIR)/$(ARCHIVE)/*
	@find $(TMPDIR)/$(ARCHIVE) -name "*.sh" -exec chmod a+x {} \;
	@find $(TMPDIR)/$(ARCHIVE) -type d -exec chmod 755 {} \;
	@chown root.root -R $(TMPDIR)/$(ARCHIVE)/*
	@tar czf $(PACKAGE).tar.gz --exclude=.svn -C $(TMPDIR) $(ARCHIVE)
	@-rm -rf $(TMPDIR)/$(ARCHIVE)
	@echo Distribution package created as $(PACKAGE).tar.gz

subdirs-clean:
	@for i in $(SUBDIRS) ;\
	do \
	    ( cd $$i;\
              $(MAKE) clean;\
       ) \
	|| exit 1;\
	done

clean: subdirs-clean
	@-rm -f $(PODIR)/*.mo $(PODIR)/*.pot
	@-rm -f $(OBJS) $(DEPFILE) *.so *.tar.gz core* *~ contrib/*~  examples/*~ scripts/*~
